{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14920\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Script used to create the Behavioral Map\
\
CALL apoc.load.json("file:///crFileSHEstudy1.json") YIELD value\
CALL apoc.create.node(['Feature',value.type], \{name:value.name, exported_packages:value.exported_packages, \
imported_packages:value.imported_packages, version:value.version, status:value.status, type:value.type\}) YIELD node\
MERGE (f:Feature \{name: node.name\})\
WITH value, node, f\
UNWIND value.relationships AS relation\
MERGE (fr:Feature \{name: relation.feature_name\})\
WITH value, relation, f, fr\
WHERE relation.relationship_type <> ""\
CALL apoc.merge.relationship(f,relation.relationship_type,\{\},\{\},fr) YIELD rel\
RETURN value, f, fr, rel\
\
=====================================================================================================\
\
// Queries to get Behavioral Map\
// Get all features that have a relation define as Requires on the right side.\
MATCH p=()-[r:Requires]->() RETURN p\
// Get all features that have a relation define as Requires independent the relationship direction.\
MATCH p=()-[r: Requires]-() RETURN p\
\
// Get all features that have a relation define as Controls on the right side.\
MATCH p=()-[r:Controls]->() RETURN p\
// Get all features that have a relation define as Controls independent of the relationship direction.\
MATCH p=()-[r: Controls]-() RETURN p\
\
// Get all features, but don't verify the type of the relationship.\
MATCH p=()-[]-() RETURN p\
\
\
=====================================================================================================\
\
// Delete the graph\
MATCH (n)\
DETACH DELETE n\
\
========\
\
// Used to look for Extraneous Connector architectural smell in the configuration.\
MATCH (f:Feature)-[r:Requires]->(f2:Feature)\
WHERE exists((f)-[:Reads]->(f2))\
RETURN f, r, f2\
\
// Used to look for Extraneous Connector architectural smell in the configuration but check feature types\
MATCH p=(:Controller)-[r: Requires]->(:Sensor)<-[a: Reads]-(:Controller) RETURN p\
\
// Used to look for Hub-Like Dependency architectural smell in the configuration.\
MATCH (f:Feature)-[r:Requires]->(f2:Feature)\
OPTIONAL MATCH (f2)-[r2:Requires]->(:Feature)\
WITH f2, count(r) As Rtotal, count(r2) As Rtotal2\
WHERE Rtotal >= 5 and Rtotal > Rtotal2\
RETURN f2, Rtotal, Rtotal2\
\
\
}